{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khatk\\\\Desktop\\\\Tutorials\\\\Web Development\\\\spiritworld\\\\client\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbaruser from \"../Layout/NavbarUser\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { getResourcesByCount, fetchResourcesByFilter } from '../../actions/resourceAction';\nimport { RowGenerator, GenerateRowsWithBlocks } from '../../utils/helpers';\nimport '../../css/styles.css';\nimport Resource from '../Layout/Resource';\nimport { Container, Row } from 'reactstrap';\nimport Search from '../Features/Search';\n\nconst Home = ({\n  getResourcesByCount,\n  resource\n}) => {\n  const [setResources] = useState([]);\n  useEffect(() => {\n    getResourcesByCount(4);\n  }, [getResourcesByCount]);\n  let {\n    search\n  } = useSelector(state => ({ ...state\n  }));\n  const {\n    text\n  } = search;\n  const {\n    resources\n  } = resource;\n  /*\r\n  const renderPosts =\r\n  \r\n    resources.length === 0 ? (\r\n      <Alert color = \"primary\">{noPostsMessage}</Alert>\r\n    ):(\r\n    resources.resource.map((resource)=>{\r\n        return (\r\n        <Resource  key={resource._id}\r\n          title={resource.title}\r\n         content={resource.content}\r\n         rating={resource.rating}\r\n         />\r\n      )\r\n        })\r\n        \r\n    )\r\n  */\n\n  useEffect(() => {\n    const delayed = setTimeout(() => {\n      fetchResourcesByFilter({\n        query: text\n      }).then(res => {\n        setResources(res.data);\n      });\n    }, 300);\n    console.log(text);\n    return () => clearTimeout(delayed);\n  }, [text]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbaruser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"float-right p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"search/filter menu\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, resources.length < 1 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 34\n    }\n  }, \"No resources found\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, resources.map(res => /*#__PURE__*/React.createElement(Resource, {\n    key: res._id,\n    id: res._id,\n    title: res.title,\n    content: res.content,\n    category: res.category.slug,\n    image: res.image.image,\n    rating: res.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    resource: state.resource\n  };\n};\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources()),\r\n  };\r\n};\r\n*/\n\n\nexport default connect(mapStateToProps, {\n  getResourcesByCount\n})(Home);\n/*\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resources: []\r\n    }\r\n  }\r\n  \r\n  */\n\n/*\r\nstatic propTypes={\r\n  logout: PropTypes.func.isRequired\r\n}\r\n*/\n\n/*\r\n componentDidMount(){\r\n   this.props.dispatch(getResources(6,0,'desc'));\r\n }\r\n */\n\n/*\r\nshowResources = (resource) =>{\r\n    if(resource.collection){\r\n      const rowArray = RowGenerator(resource.collection, 2);\r\n      //console.log(rowArray)\r\n      const generatedResources = GenerateRowsWithBlocks(rowArray,'six')\r\n      return generatedResources;\r\n    }\r\n  return false;\r\n}\r\n*/\n\n/*\r\n onLogoutClick = e => {\r\n   e.preventDefault();\r\n   this.props.logoutUser();\r\n };\r\n */\n\n/*\r\n  componentDidMount = () => {\r\n    this.props.getPopularResources();\r\n}\r\n*/\n\n/*\r\n  componentDidMount(){\r\n\r\n    this.setState({\r\n      resources: this.props.resources.resource\r\n    })\r\n}\r\n*/\n\n/*\r\nloadmore = () => {\r\n    let resourceList = this.props.resources.collection;\r\n    //let count = resourceList.length;\r\n    this.props.dispatch(getPopularResources('desc',resourceList))\r\n}\r\n\r\n\r\nshowResources = (resources) => {\r\n    if(resources){\r\n        const rowsArray = RowGenerator(resources, 2);\r\n        const generatedResources = GenerateRowsWithBlocks(rowsArray,'six')\r\n        return generatedResources;\r\n    }\r\n    return false;\r\n}\r\n*/\n\n/*\r\n  render() {\r\n     //console.log(this.props.resources)\r\n    //const {resources} = this.props.resources;\r\n    const {items} = this.props.resources;\r\n    console.log(this.props.resources)\r\n    return (\r\n     \r\n    <div>\r\n      \r\n      \r\n      <Navbaruser />\r\n      <div style={{ height: \"75vh\" }} >\r\n        Wecome to the homepage!\r\n       \r\n\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              href=\"#\"\r\n              \r\n            >\r\n              Logout\r\n            </button>\r\n              \r\n             {/*this.showResources(this.props.resources)}*/\n\n/*\r\n<div>\r\n<Resource \r\n     \r\n     title={this.props.resources.title}\r\n     content={this.props.resources.content}\r\n     category={this.props.resources.category}\r\n     rating={this.props.resources.rating}\r\n   />\r\n  </div>\r\n  \r\n   </div>\r\n   </div>\r\n\r\n);\r\n}\r\n}\r\n*/\n\n/*\r\nHome.propTypes = {\r\n  //getResources: PropTypes.func.isRequired,\r\n  //resource: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n\r\n};\r\nconst mapStateToProps = state => ({\r\n // resources: state.resources, //same as the one in rootReducer\r\n  auth: state.auth,\r\n  resources: state.resources,\r\n  loading: state. loading,\r\n  error: state.error\r\n});\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources())\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getPopularResources }\r\n)(Home);\r\n*/","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/components/Pages/Home.js"],"names":["React","Component","useEffect","useState","PropTypes","connect","useSelector","useDispatch","logoutUser","Navbaruser","BrowserRouter","getResourcesByCount","fetchResourcesByFilter","RowGenerator","GenerateRowsWithBlocks","Resource","Container","Row","Search","Home","resource","setResources","search","state","text","resources","delayed","setTimeout","query","then","res","data","console","log","clearTimeout","paddingTop","length","map","_id","title","content","category","slug","image","rating","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, useEffect,useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Navbaruser from \"../Layout/NavbarUser\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { getResourcesByCount, fetchResourcesByFilter} from '../../actions/resourceAction';\r\nimport {RowGenerator, GenerateRowsWithBlocks} from '../../utils/helpers'\r\nimport  '../../css/styles.css'\r\nimport Resource from '../Layout/Resource'\r\nimport {Container,Row} from 'reactstrap';\r\nimport Search from '../Features/Search'\r\n\r\n \r\n\r\nconst Home = ({getResourcesByCount, resource\r\n}) => {\r\nconst [setResources] = useState([])\r\n  useEffect(()=>{\r\n    getResourcesByCount(4);\r\n  },[getResourcesByCount]);\r\n\r\n  let {search} = useSelector((state) => ({ ...state}));\r\n  const {text } = search;\r\n\r\nconst {resources} = resource\r\n/*\r\nconst renderPosts =\r\n\r\n  resources.length === 0 ? (\r\n    <Alert color = \"primary\">{noPostsMessage}</Alert>\r\n  ):(\r\n  resources.resource.map((resource)=>{\r\n      return (\r\n      <Resource  key={resource._id}\r\n        title={resource.title}\r\n       content={resource.content}\r\n       rating={resource.rating}\r\n       />\r\n    )\r\n      })\r\n      \r\n  )\r\n*/\r\nuseEffect(() => {\r\n  const delayed = setTimeout(() =>{\r\nfetchResourcesByFilter({query: text}).then((res)=>{\r\nsetResources(res.data)\r\n})\r\n\r\n  },300) \r\n  console.log(text)\r\n  return () => clearTimeout(delayed)\r\n  \r\n  \r\n},[text])\r\n  return(\r\n    <div>\r\n      <div>\r\n<Navbaruser />\r\n</div>\r\n<div>\r\n    <span className=\"float-right p-1\">\r\n      <Search />\r\n      </span>\r\n    </div>\r\n    <div>\r\n    <div className=\"container-fluid\" style={{\r\n               paddingTop: \"20px\"\r\n               \r\n              }} >\r\n      <Row>\r\n        <div className=\"col-md-3\">\r\n          search/filter menu\r\n          \r\n        </div>\r\n        \r\n      <div className=\"col-md-9\">\r\n        {resources.length < 1 && <p>No resources found</p>}\r\n        <div className=\"row\">\r\n        {resources.map((res)=>(\r\n          <Resource\r\n          key={res._id}\r\n          id={res._id}\r\n          title={res.title}\r\n          content={res.content}\r\n          category={res.category.slug}\r\n          image={res.image.image}\r\n          rating={res.rating}\r\n\r\n            \r\n         \r\n          />\r\n        ))}\r\n        </div>\r\n        </div>\r\n     </Row>\r\n    </div>\r\n    </div>\r\n        \r\n      </div>  \r\n          \r\n          \r\n        \r\n      \r\n      \r\n    \r\n  )\r\n      }\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    resource: state.resource,\r\n  };\r\n};\r\n/*\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources()),\r\n  };\r\n};\r\n*/\r\n\r\nexport default connect(mapStateToProps,{getResourcesByCount})(Home);\r\n/*\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resources: []\r\n    }\r\n  }\r\n  \r\n  */\r\n  /*\r\n  static propTypes={\r\n    logout: PropTypes.func.isRequired\r\n  }\r\n  */\r\n /*\r\n  componentDidMount(){\r\n    this.props.dispatch(getResources(6,0,'desc'));\r\n  }\r\n  */\r\n  /*\r\n  showResources = (resource) =>{\r\n\r\n    if(resource.collection){\r\n        const rowArray = RowGenerator(resource.collection, 2);\r\n        //console.log(rowArray)\r\n        const generatedResources = GenerateRowsWithBlocks(rowArray,'six')\r\n        return generatedResources;\r\n      }\r\n    return false;\r\n  }\r\n  */\r\n /*\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  */\r\n/*\r\n  componentDidMount = () => {\r\n    this.props.getPopularResources();\r\n}\r\n*/\r\n/*\r\n  componentDidMount(){\r\n\r\n    this.setState({\r\n      resources: this.props.resources.resource\r\n    })\r\n}\r\n*/\r\n\r\n/*\r\nloadmore = () => {\r\n    let resourceList = this.props.resources.collection;\r\n    //let count = resourceList.length;\r\n    this.props.dispatch(getPopularResources('desc',resourceList))\r\n}\r\n\r\n\r\nshowResources = (resources) => {\r\n    if(resources){\r\n        const rowsArray = RowGenerator(resources, 2);\r\n        const generatedResources = GenerateRowsWithBlocks(rowsArray,'six')\r\n        return generatedResources;\r\n    }\r\n    return false;\r\n}\r\n*/\r\n/*\r\n  render() {\r\n     //console.log(this.props.resources)\r\n    //const {resources} = this.props.resources;\r\n    const {items} = this.props.resources;\r\n    console.log(this.props.resources)\r\n    return (\r\n     \r\n    <div>\r\n      \r\n      \r\n      <Navbaruser />\r\n      <div style={{ height: \"75vh\" }} >\r\n        Wecome to the homepage!\r\n       \r\n\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              href=\"#\"\r\n              \r\n            >\r\n              Logout\r\n            </button>\r\n              \r\n             {/*this.showResources(this.props.resources)}*/\r\n     /*\r\n     <div>\r\n     <Resource \r\n          \r\n          title={this.props.resources.title}\r\n          content={this.props.resources.content}\r\n          category={this.props.resources.category}\r\n          rating={this.props.resources.rating}\r\n        />\r\n\r\n     </div>\r\n       \r\n        </div>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\n*/\r\n/*\r\nHome.propTypes = {\r\n  //getResources: PropTypes.func.isRequired,\r\n  //resource: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n\r\n};\r\nconst mapStateToProps = state => ({\r\n // resources: state.resources, //same as the one in rootReducer\r\n  auth: state.auth,\r\n  resources: state.resources,\r\n  loading: state. loading,\r\n  error: state.error\r\n});\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources())\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getPopularResources }\r\n)(Home);\r\n*/"]},"metadata":{},"sourceType":"module"}