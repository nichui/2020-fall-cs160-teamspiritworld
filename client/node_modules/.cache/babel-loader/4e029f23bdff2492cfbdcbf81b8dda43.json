{"ast":null,"code":"import axios from 'axios';\nimport { GET_RESOURCES, GET_RESOURCE, RESOURCES_LOADING } from '../actions/types';\nimport { returnErrors } from \"./errorAction\";\nexport function getPopularResources(title, content, category, rating, order = 'asc', list) {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    title,\n    content,\n    category,\n    rating\n  });\n  const request = axios.get(`/api/resources/popular?order=${order}`, body, config).then(response => {\n    return list ? [...list, ...response.data] : response.data;\n  });\n  return {\n    type: GET_RESOURCES,\n    payload: request\n  };\n}\nexport function getResource(resourceId) {\n  //  /api/resources/resource?id=5e13765a4084511885f252f1\n  const request = axios.get(`/api/resources/resource?id=${resourceId}`).then(response => {\n    return response.data;\n  }).catch(err => {\n    return false;\n  });\n  return {\n    type: GET_RESOURCE,\n    payload: request\n  };\n}\nexport const setResourcesLoading = () => {\n  return {\n    type: RESOURCES_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/actions/resourceAction.js"],"names":["axios","GET_RESOURCES","GET_RESOURCE","RESOURCES_LOADING","returnErrors","getPopularResources","title","content","category","rating","order","list","config","headers","body","JSON","stringify","request","get","then","response","data","type","payload","getResource","resourceId","catch","err","setResourcesLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,YAAtB,EAAmCC,iBAAnC,QAA2D,kBAA3D;AACA,SAAQC,YAAR,QAA2B,eAA3B;AAEA,OAAO,SAASC,mBAAT,CACHC,KADG,EAEHC,OAFG,EAGHC,QAHG,EAIHC,MAJG,EAKHC,KAAK,GAAG,KALL,EAMHC,IANG,EAON;AACG,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADE,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEV,IAAAA,KAAF;AAAQC,IAAAA,OAAR;AAAgBC,IAAAA,QAAhB;AAAyBC,IAAAA;AAAzB,GAAf,CAAb;AAEA,QAAMQ,OAAO,GAAGjB,KAAK,CAACkB,GAAN,CAAW,gCAA+BR,KAAM,EAAhD,EAAkDI,IAAlD,EAAuDF,MAAvD,EACCO,IADD,CACOC,QAAQ,IAAG;AACd,WAAOT,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAS,GAAGS,QAAQ,CAACC,IAArB,CAAH,GAAgCD,QAAQ,CAACC,IAApD;AACH,GAHD,CAAhB;AAKgB,SAAO;AAEHC,IAAAA,IAAI,EAAErB,aAFH;AAGHsB,IAAAA,OAAO,EAAEN;AAHN,GAAP;AAKnB;AAGD,OAAO,SAASO,WAAT,CAAqBC,UAArB,EAAgC;AACnC;AAEA,QAAMR,OAAO,GAAGjB,KAAK,CAACkB,GAAN,CAAW,8BAA6BO,UAAW,EAAnD,EACFN,IADE,CACIC,QAAQ,IAAI;AACf,WAAOA,QAAQ,CAACC,IAAhB;AACH,GAHE,EAGAK,KAHA,CAGOC,GAAD,IAAO;AACZ,WAAO,KAAP;AACH,GALE,CAAhB;AAOC,SAAO;AACHL,IAAAA,IAAI,EAAEpB,YADH;AAEHqB,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAKH;AAGD,OAAO,MAAMW,mBAAmB,GAAG,MAAM;AACtC,SAAO;AACLN,IAAAA,IAAI,EAAEnB;AADD,GAAP;AAGD,CAJK","sourcesContent":["import axios from 'axios';\r\nimport {GET_RESOURCES,GET_RESOURCE,RESOURCES_LOADING} from '../actions/types';\r\nimport {returnErrors} from \"./errorAction\"\r\n\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };"]},"metadata":{},"sourceType":"module"}