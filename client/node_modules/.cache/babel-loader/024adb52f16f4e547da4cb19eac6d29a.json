{"ast":null,"code":"import axios from 'axios';\nimport { GET_RESOURCES, GET_RESOURCE, RESOURCES_LOADING, FETCH_ALL_POSTS_FAILURE, FETCH_ALL_POSTS_SUCCESS, FETCH_ALL_POSTS_REQUEST, SEARCH_QUERY } from '../actions/types';\nimport { returnErrors } from \"./errorAction\";\n/*\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  */\n\nexport const getCategories = async () => //dispatch(setItemsLoading());\nawait axios.get('/api/categories');\nexport const getCategory = slug => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get(`/api/resources/category/${slug}`).then(response => //const resources = response.data;\n  dispatch({\n    type: GET_RESOURCES,\n    payload: response.data\n  })).catch(err => dispatch(returnErrors(err.response.data)));\n};\nexport const getResourcesByCount = async (count) => // dispatch(setItemsLoading());\naxios.get(`/api/resources/${count}`);\nexport const getResource = resourceId => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get(`/api/resources/resource?id=${resourceId}`).then(response => //const resources = response.data;\n  dispatch({\n    type: GET_RESOURCE,\n    payload: response.data\n  })).catch(err => dispatch(returnErrors(err.response.data)));\n};\nexport const fetchResourcesByFilter = async (arg) => axios.post(`/api/resources/search/filters`, arg);\n/*\r\nexport const getResources = (sort,order, page) => (dispatch) => {\r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .get(`/api/resources/`,sort,order,page)\r\n    .then(response => \r\n      //const resources = response.data;\r\n      dispatch({ type: GET_RESOURCES, payload: response.data })\r\n    )\r\n    .catch((err) => \r\n      dispatch(returnErrors(\r\n       err.response.data,\r\n      ))\r\n      );\r\n  }\r\n*/\n\nexport const setItemsLoading = () => {\n  return {\n    type: RESOURCES_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/actions/resourceAction.js"],"names":["axios","GET_RESOURCES","GET_RESOURCE","RESOURCES_LOADING","FETCH_ALL_POSTS_FAILURE","FETCH_ALL_POSTS_SUCCESS","FETCH_ALL_POSTS_REQUEST","SEARCH_QUERY","returnErrors","getCategories","get","getCategory","slug","dispatch","setItemsLoading","then","response","type","payload","data","catch","err","getResourcesByCount","count","getResource","resourceId","fetchResourcesByFilter","arg","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,YAAtB,EAAmCC,iBAAnC,EAAqDC,uBAArD,EACIC,uBADJ,EAEIC,uBAFJ,EAGIC,YAHJ,QAGuB,kBAHvB;AAIA,SAAQC,YAAR,QAA2B,eAA3B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDC,OAAO,MAAMC,aAAa,GAAG,YAG5B;AACA,MAAMT,KAAK,CACRU,GADG,CACC,iBADD,CAJA;AAUR,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAUC,QAAD,IAAc;AAEhDA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAd,EAAAA,KAAK,CACFU,GADH,CACQ,2BAA0BE,IAAK,EADvC,EAEGG,IAFH,CAEQC,QAAQ,IACZ;AACAH,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEhB,aAAR;AAAuBiB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAzC,GAAD,CAJZ,EAMGC,KANH,CAMUC,GAAD,IACLR,QAAQ,CAACL,YAAY,CACpBa,GAAG,CAACL,QAAJ,CAAaG,IADO,CAAb,CAPZ;AAYD,CAfM;AAgBN,OAAO,MAAMG,mBAAmB,GAAG,OAAOC,KAAP,KAEjC;AACEvB,KAAK,CACHU,GADF,CACO,kBAAiBa,KAAM,EAD9B,CAHG;AAQN,OAAO,MAAMC,WAAW,GAAIC,UAAD,IAAiBZ,QAAD,IAAc;AAEvDA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAd,EAAAA,KAAK,CACFU,GADH,CACQ,8BAA6Be,UAAW,EADhD,EAEGV,IAFH,CAEQC,QAAQ,IACZ;AACAH,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEf,YAAR;AAAsBgB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAxC,GAAD,CAJZ,EAMGC,KANH,CAMUC,GAAD,IACLR,QAAQ,CAACL,YAAY,CACpBa,GAAG,CAACL,QAAJ,CAAaG,IADO,CAAb,CAPZ;AAWD,CAdM;AAeP,OAAO,MAAMO,sBAAsB,GAAG,OAAOC,GAAP,KAGtC3B,KAAK,CACA4B,IADL,CACW,+BADX,EAC0CD,GAD1C,CAHO;AAQP;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMb,eAAe,GAAG,MAAM;AACnC,SAAO;AACLG,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from 'axios';\r\nimport {GET_RESOURCES,GET_RESOURCE,RESOURCES_LOADING,FETCH_ALL_POSTS_FAILURE,\r\n    FETCH_ALL_POSTS_SUCCESS,\r\n    FETCH_ALL_POSTS_REQUEST,\r\n    SEARCH_QUERY} from '../actions/types';\r\nimport {returnErrors} from \"./errorAction\"\r\n/*\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  */\r\n export const getCategories = async ()=>\r\n    \r\n   \r\n  //dispatch(setItemsLoading());\r\n  await axios\r\n    .get('/api/categories')\r\n    \r\n   \r\n   \r\n\r\nexport const getCategory = (slug) =>(dispatch) => {\r\n   \r\n  dispatch(setItemsLoading());\r\n  axios\r\n    .get(`/api/resources/category/${slug}`)\r\n    .then(response => \r\n      //const resources = response.data;\r\n      dispatch({ type: GET_RESOURCES, payload: response.data })\r\n    )\r\n    .catch((err) => \r\n      dispatch(returnErrors(\r\n       err.response.data,\r\n      ))\r\n      );\r\n    \r\n};\r\n export const getResourcesByCount = async (count) => \r\n   \r\n   // dispatch(setItemsLoading());\r\n     axios\r\n      .get(`/api/resources/${count}`);\r\n     \r\n      \r\n  \r\n  export const getResource = (resourceId) => (dispatch) => {\r\n   \r\n    dispatch(setItemsLoading());\r\n    axios\r\n      .get(`/api/resources/resource?id=${resourceId}`)\r\n      .then(response => \r\n        //const resources = response.data;\r\n        dispatch({ type: GET_RESOURCE, payload: response.data })\r\n      )\r\n      .catch((err) => \r\n        dispatch(returnErrors(\r\n         err.response.data,\r\n        ))\r\n        );\r\n  }\r\n  export const fetchResourcesByFilter = async (arg)  => \r\n   \r\n    \r\n  axios\r\n      .post(`/api/resources/search/filters`,arg)\r\n      \r\n      \r\n  \r\n  /*\r\n  export const getResources = (sort,order, page) => (dispatch) => {\r\n    dispatch(setItemsLoading());\r\n    axios\r\n      .get(`/api/resources/`,sort,order,page)\r\n      .then(response => \r\n        //const resources = response.data;\r\n        dispatch({ type: GET_RESOURCES, payload: response.data })\r\n      )\r\n      .catch((err) => \r\n        dispatch(returnErrors(\r\n         err.response.data,\r\n        ))\r\n        );\r\n\r\n  }\r\n  */\r\n  export const setItemsLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}