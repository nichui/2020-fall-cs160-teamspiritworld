{"ast":null,"code":"import axios from 'axios';\nimport { GET_RESOURCES, GET_RESOURCE, RESOURCES_LOADING, FETCH_ALL_POSTS_FAILURE, FETCH_ALL_POSTS_SUCCESS, FETCH_ALL_POSTS_REQUEST } from '../actions/types';\nimport { returnErrors } from \"./errorAction\";\n/*\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  */\n\nexport function getPopularResources(count) {\n  /*\r\n  const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  //Request body\r\n  \r\n  const body = JSON.stringify({\r\n    title, content,category,rating\r\n  });\r\n  */\n  //dispatch(setItemsLoading());\n  axios.get(`/api/resources/popular/${count}`).then(response => //const resources = response.data;\n  dispatch({\n    type: GET_RESOURCES,\n    payload: response.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n}\n;\nexport const setItemsLoading = () => {\n  return {\n    type: RESOURCES_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/actions/resourceAction.js"],"names":["axios","GET_RESOURCES","GET_RESOURCE","RESOURCES_LOADING","FETCH_ALL_POSTS_FAILURE","FETCH_ALL_POSTS_SUCCESS","FETCH_ALL_POSTS_REQUEST","returnErrors","getPopularResources","count","get","then","response","dispatch","type","payload","data","catch","err","status","setItemsLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,YAAtB,EAAmCC,iBAAnC,EAAqDC,uBAArD,EACIC,uBADJ,EAEIC,uBAFJ,QAEkC,kBAFlC;AAGA,SAAQC,YAAR,QAA2B,eAA3B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDC,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAsC;AAC1C;;;;;;;;;;;;AAYA;AACAT,EAAAA,KAAK,CACFU,GADH,CACQ,0BAAyBD,KAAM,EADvC,EAEGE,IAFH,CAEQC,QAAQ,IACZ;AACAC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEb,aAAR;AAAuBc,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAJZ,EAMGC,KANH,CAMUC,GAAD,IACLL,QAAQ,CAACN,YAAY,CACpBW,GAAG,CAACN,QAAJ,CAAaI,IADO,EAEnBE,GAAG,CAACN,QAAJ,CAAaO,MAFM,CAAb,CAPZ;AAaD;AAAA;AACD,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO;AACLN,IAAAA,IAAI,EAAEX;AADD,GAAP;AAGD,CAJM","sourcesContent":["import axios from 'axios';\r\nimport {GET_RESOURCES,GET_RESOURCE,RESOURCES_LOADING,FETCH_ALL_POSTS_FAILURE,\r\n    FETCH_ALL_POSTS_SUCCESS,\r\n    FETCH_ALL_POSTS_REQUEST} from '../actions/types';\r\nimport {returnErrors} from \"./errorAction\"\r\n/*\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  */\r\n export function getPopularResources(count)   {\r\n    /*\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    //Request body\r\n    \r\n    const body = JSON.stringify({\r\n      title, content,category,rating\r\n    });\r\n    */\r\n    //dispatch(setItemsLoading());\r\n    axios\r\n      .get(`/api/resources/popular/${count}`)\r\n      .then(response => \r\n        //const resources = response.data;\r\n        dispatch({ type: GET_RESOURCES, payload: response.data })\r\n      )\r\n      .catch((err) => \r\n        dispatch(returnErrors(\r\n         err.response.data,\r\n          err.response.status\r\n        ))\r\n        );\r\n      \r\n  };\r\n  export const setItemsLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}