{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khatk\\\\Desktop\\\\Tutorials\\\\Web Development\\\\spiritworld\\\\client\\\\src\\\\components\\\\Pages\\\\Signin.js\";\nimport React, { Component } from 'react';\nimport '../../css/styles.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().min(6, 'Too short').required('Required !!'),\n  email: Yup.string().email('Invalid email :(').required('Required !!')\n});\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      success: false,\n      validation: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const auth = props.user.auth;\n\n    if (auth) {\n      return {\n        success: auth ? true : false\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate() {\n    if (this.state.success) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    //const { errors } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"log\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Formik // initialValues={{ email:'francis@gmail.com', password:'password123'}}\n    , {\n      validationSchema: LoginSchema,\n      onSubmit: values => {\n        this.props.dispatch(loginUser(values)).then(response => {\n          if (!this.props.user.auth) {\n            this.setState({\n              validation: true\n            });\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 3\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"text-center border border-light p-5\",\n      action: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h4 mb-4 FormTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 8\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      id: \"defaultLoginFormEmail\",\n      class: \"form-control mb-4\",\n      placeholder: \"E-mail\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 8\n      }\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, errors.email) : null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"defaultLoginFormPassword\",\n      class: \"form-control mb-4\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Forgot password?\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }\n    }, \"Not a member? Please register below.\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }, \"Register\"))), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `${this.props.match.url}/Register`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 2\n      }\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withRouter(Login));","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/components/Pages/Signin.js"],"names":["React","Component","Link","withRouter","PropTypes","Formik","Yup","connect","loginUser","LoginSchema","object","shape","password","string","min","required","email","Login","state","success","validation","getDerivedStateFromProps","props","auth","user","componentDidUpdate","history","push","render","values","dispatch","then","response","setState","errors","touched","handleChange","handleBlur","handleSubmit","onSubmit","onChange","pathname","match","url","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../css/styles.css';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n\r\n\tpassword: Yup.string().min(6,'Too short').required('Required !!'),\r\n\temail: Yup.string().email('Invalid email :(').required('Required !!'),\r\n})\r\n\r\nclass Login extends Component {\r\n\t/*\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\terrors: {}\r\n\t\t  };\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// If logged in and user navigates to Login page, should redirect them to dashboard\r\n\t\tif (this.props.auth.isAuthenticated) {\r\n\t\t  this.props.history.push(\"/home\");\r\n\t\t}\r\n\t  }\r\n\t\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.auth.isAuthenticated) {\r\n\t\t  this.props.history.push(\"/home\"); // push user to dashboard when they login\r\n\t\t}\r\n\t\tif (nextProps.errors) {\r\n\t\t\tthis.setState({\r\n\t\t\t  errors: nextProps.errors\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\t\tonChange = e => {\r\n\t\t\tthis.setState({ [e.target.id]: e.target.value });\r\n\t\t  };\r\n\t\t\r\n\t\t  onSubmit = e => {\r\n\t\t\te.preventDefault();\r\n\t\t\r\n\t\t\tconst userData = {\r\n\t\t\t  email: this.state.email,\r\n\t\t\t  password: this.state.password\r\n\t\t\t};\r\n\t\t\r\n\t\t\tthis.props.loginUser(userData);\r\n\t\t  };\r\n\t\t  */\r\n\t\t state ={\r\n\t\t\tsuccess: false,\r\n\t\t\tvalidation:false\r\n\t\t}\r\n\t\r\n\t\tstatic getDerivedStateFromProps(props,state){\r\n\t\t\tconst auth = props.user.auth;\r\n\t\t\tif(auth){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: auth ? true :false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\r\n\t\r\n\t\tcomponentDidUpdate(){\r\n\t\t\tif(this.state.success){\r\n\t\t\t\tthis.props.history.push('/home');\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\trender(){\r\n\t\t//const { errors } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"log\">\r\n\r\n\t\t<Formik\r\n                   // initialValues={{ email:'francis@gmail.com', password:'password123'}}\r\n                    validationSchema={LoginSchema}\r\n                    onSubmit={ values => {\r\n                        this.props.dispatch(loginUser(values)).then(response => {\r\n                            if(!this.props.user.auth){\r\n                                this.setState({\r\n                                    validation:true\r\n                                })\r\n                            }\r\n                        })                       \r\n                    }}\r\n                >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleChange,\r\n                      handleBlur,\r\n                      handleSubmit  \r\n                    })=>(\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<form onSubmit={this.onSubmit} className=\"text-center border border-light p-5\" action=\"#!\">\r\n\r\n    \t\t\t<p className=\"h4 mb-4 FormTitle\">Sign in</p>\r\n\r\n   \t\t \t<input name=\"email\" type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\" placeholder=\"E-mail\" onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email} />\r\n\t\t\t\t\t\t\t\t\t\t { errors.email && touched.email ?\r\n                                        <div className=\"error_label\">{errors.email}</div>\r\n                                    :null}\r\n\t\t\t\t\t\t\t\t\t\t {/*onChange={this.onChange}  value={this.state.email} error={errors.email} id=\"email\"/>*/}\r\n\t\t\t\r\n \r\n    \t\t<input type=\"password\" name=\"password\"  id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"Password\"  onChange={this.onChange}  value={this.state.password} error={errors.password} id=\"password\"/>\r\n\t\t\t\r\n    \r\n       \r\n            <a href=\"\">Forgot password?</a>\r\n        \r\n\r\n  \r\n    \t<button class=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n\r\n    \r\n    \t<p>Not a member? Please register below.\r\n       \r\n    \t</p>\r\n\r\n    \t<button class=\"btn btn-info btn-block my-4\" type=\"submit\">Register</button>\r\n   \r\n\r\n\t\t</form>\r\n\r\n\t\t\t\t\r\n)}\r\n</Formik>\r\n\t\t\t\r\n\t<Link to={{\r\n\t\t\t\tpathname: `${this.props.match.url}/Register`\r\n\t\t\t}}></Link>\r\n</div>\r\n\r\n\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nLogin.propTypes = {\r\n\tloginUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired\r\n  };\r\n  const mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors\r\n  });\r\n  export default connect(\r\n\tmapStateToProps,\r\n\t{ loginUser }\r\n  )(withRouter(Login));\r\n\r\n  "]},"metadata":{},"sourceType":"module"}