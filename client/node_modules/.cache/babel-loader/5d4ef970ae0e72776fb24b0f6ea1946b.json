{"ast":null,"code":"import axios from 'axios';\nimport { GET_RESOURCES, GET_RESOURCE, RESOURCES_LOADING, FETCH_ALL_POSTS_FAILURE, FETCH_ALL_POSTS_SUCCESS, FETCH_ALL_POSTS_REQUEST } from '../actions/types';\nimport { returnErrors } from \"./errorAction\";\n/*\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  */\n\nexport const getPopularResources = (title, content, category, rating) => dispatch => {\n  /*\r\n  const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  //Request body\r\n  \r\n  const body = JSON.stringify({\r\n    title, content,category,rating\r\n  });\r\n  */\n  dispatch({\n    type: FETCH_ALL_POSTS_REQUEST\n  });\n  axios.get(\"/api/resources/popular\").then(response => {\n    const resources = response.data.response;\n    dispatch({\n      type: FETCH_ALL_POSTS_SUCCESS,\n      payload: resources\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_ALL_POSTS_FAILURE,\n      payload: \"Something went wrong while fetching all the resources\"\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/actions/resourceAction.js"],"names":["axios","GET_RESOURCES","GET_RESOURCE","RESOURCES_LOADING","FETCH_ALL_POSTS_FAILURE","FETCH_ALL_POSTS_SUCCESS","FETCH_ALL_POSTS_REQUEST","returnErrors","getPopularResources","title","content","category","rating","dispatch","type","get","then","response","resources","data","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,YAAtB,EAAmCC,iBAAnC,EAAqDC,uBAArD,EACIC,uBADJ,EAEIC,uBAFJ,QAEkC,kBAFlC;AAGA,SAAQC,YAAR,QAA2B,eAA3B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDC,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAOC,OAAP,EAAeC,QAAf,EAAwBC,MAAxB,KAAoCC,QAAD,IAAc;AACjF;;;;;;;;;;;;AAYAA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAN,EAAAA,KAAK,CACFe,GADH,CACO,wBADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcF,QAAhC;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,uBAAR;AAAiCe,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GALH,EAMGG,KANH,CAMUC,GAAD,IAAS;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,uBADC;AAEPgB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAXH;AAYD,CA1BK","sourcesContent":["import axios from 'axios';\r\nimport {GET_RESOURCES,GET_RESOURCE,RESOURCES_LOADING,FETCH_ALL_POSTS_FAILURE,\r\n    FETCH_ALL_POSTS_SUCCESS,\r\n    FETCH_ALL_POSTS_REQUEST} from '../actions/types';\r\nimport {returnErrors} from \"./errorAction\"\r\n/*\r\nexport function getPopularResources(\r\n    title,\r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n    const body = JSON.stringify({ title,content,category,rating });\r\n\r\n    const request = axios.get(`/api/resources/popular?order=${order}`,body,config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n\r\n\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n export const setResourcesLoading = () => {\r\n    return {\r\n      type: RESOURCES_LOADING\r\n    };\r\n  };\r\n  */\r\n export const getPopularResources = (title,content,category,rating) => (dispatch) => {\r\n    /*\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    //Request body\r\n    \r\n    const body = JSON.stringify({\r\n      title, content,category,rating\r\n    });\r\n    */\r\n    dispatch({ type: FETCH_ALL_POSTS_REQUEST });\r\n    axios\r\n      .get(\"/api/resources/popular\")\r\n      .then((response) => {\r\n        const resources = response.data.response;\r\n        dispatch({ type: FETCH_ALL_POSTS_SUCCESS, payload: resources });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: FETCH_ALL_POSTS_FAILURE,\r\n          payload: \"Something went wrong while fetching all the resources\",\r\n        });\r\n      });\r\n  };\r\n  \r\n  "]},"metadata":{},"sourceType":"module"}