{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khatk\\\\Desktop\\\\Tutorials\\\\Web Development\\\\spiritworld\\\\client\\\\src\\\\components\\\\Pages\\\\Signin.js\";\nimport React, { Component } from 'react';\nimport '../../css/styles.css';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; //import { loginUser } from \"../../actions/authActions\";\n\n/*\r\nconst LoginSchema = Yup.object().shape({\r\n\r\n\tpassword: Yup.string().min(6,'Too short').required('Required !!'),\r\n\temail: Yup.string().email('Invalid email :(').required('Required !!'),\r\n})\r\n*/\n\nclass Signin extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      success: false,\n      validation: false\n    };\n\n    this.handleChange = e => {\n      console.log(e);\n    };\n\n    this.handleSubmit = e => {\n      console.log(e);\n    };\n\n    this.props = this.props;\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/WelcomePage\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"log\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: 'john.doe@sjsu.edu',\n        password: 'password123'\n      },\n      validationSchema: LoginSchema,\n      onSubmit: values => {\n        console.log(values);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"text-center border border-light p-5\",\n      action: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h4 mb-4 FormTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      name: \"email\",\n      type: \"email\",\n      id: \"defaultLoginFormEmail\",\n      class: \"form-control mb-4\",\n      placeholder: \"E-mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, errors.email)\n    /*come from Yup*/\n    : null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      id: \"defaultLoginFormPassword\",\n      class: \"form-control mb-4\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, errors.password)\n    /*come from Yup*/\n    : null, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Forgot password?\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }\n    }, \"Not a member? Please register below.\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }, \"Register\"))), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `${this.props.match.url}/Register`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 2\n      }\n    }));\n  }\n\n}\n/*\r\nSignin.propTypes = {\r\n\tloginUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired\r\n  };const mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors\r\n  });export default connect(\r\n\tmapStateToProps,\r\n\t{ loginUser }\r\n  )(Signin);\r\n*/","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/components/Pages/Signin.js"],"names":["React","Component","Link","Formik","Yup","PropTypes","connect","Signin","constructor","props","state","success","validation","handleChange","e","console","log","handleSubmit","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","errors","setState","render","email","password","LoginSchema","values","touched","handleBlur","pathname","match","url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../css/styles.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import { loginUser } from \"../../actions/authActions\";\r\n/*\r\nconst LoginSchema = Yup.object().shape({\r\n\r\n\tpassword: Yup.string().min(6,'Too short').required('Required !!'),\r\n\temail: Yup.string().email('Invalid email :(').required('Required !!'),\r\n})\r\n*/\r\nclass Signin extends Component {\r\n\tconstructor(props){\r\n\t\tsuper()\r\n\t\tthis.props = this.props\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// If logged in and user navigates to Login page, should redirect them to dashboard\r\n\t\tif (this.props.auth.isAuthenticated) {\r\n\t\t  this.props.history.push(\"/WelcomePage\");\r\n\t\t}\r\n\t  }\r\n\tstate = {\r\n\t\tsuccess: false,\r\n\t\tvalidation:false\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.auth.isAuthenticated) {\r\n\t\t  this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\r\n\t\t}\r\n\t\tif (nextProps.errors) {\r\n\t\t\tthis.setState({\r\n\t\t\t  errors: nextProps.errors\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\thandleChange=(e) => {\r\n\t\tconsole.log(e)\r\n\t}\r\n\thandleSubmit=(e) => {\r\n\t\tconsole.log(e)\r\n\t}\r\n\trender(){\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"log\">\r\n\r\n\r\n\t\t\t\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{email:'john.doe@sjsu.edu',password:'password123'}}\r\n\t\t\t\tvalidationSchema={LoginSchema}\r\n\t\t\t\tonSubmit={values=>{\r\n\t\t\t\t\tconsole.log(values)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\terrors,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\thandleSubmit\r\n\t\t\t\t})=>(\r\n\r\n\t\t\t\t\r\n\t\t\t\t<form onSubmit={handleSubmit} className=\"text-center border border-light p-5\" action=\"#!\">\r\n\r\n    \t\t\t<p className=\"h4 mb-4 FormTitle\">Sign in</p>\r\n\r\n   \t\t \t<input onChange={handleChange} onBlur={handleBlur} value={values.email} name=\"email\" type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\" placeholder=\"E-mail\"/>\r\n\t\t\t{errors.email && touched.email ?\r\n\t\t\t\t<div className=\"error_label\">{errors.email}</div>/*come from Yup*/\r\n\t\t\r\n\t\t:null}\r\n \r\n    \t\t<input type=\"password\" name=\"password\" onChange={handleChange} onBlur={handleBlur} value={values.password} id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"Password\"/>\r\n\t\t\t{errors.password && touched.password?\r\n\t\t\t\t<div className=\"error_label\">{errors.password}</div>/*come from Yup*/\r\n\t\t\r\n\t\t:null}\r\n    \r\n       \r\n            <a href=\"\">Forgot password?</a>\r\n        \r\n\r\n  \r\n    \t<button class=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n\r\n    \r\n    \t<p>Not a member? Please register below.\r\n       \r\n    \t</p>\r\n\r\n    \t<button class=\"btn btn-info btn-block my-4\" type=\"submit\">Register</button>\r\n   \r\n\r\n\t\t</form>\r\n\r\n\t\t\t\t)}\r\n\r\n\t\t\t</Formik>\r\n\t\t\t\r\n\t<Link to={{\r\n\t\t\t\tpathname: `${this.props.match.url}/Register`\r\n\t\t\t}}></Link>\r\n</div>\r\n\r\n\r\n\t\t\t)\r\n\t}\r\n}\r\n/*\r\nSignin.propTypes = {\r\n\tloginUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired\r\n  };const mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors\r\n  });export default connect(\r\n\tmapStateToProps,\r\n\t{ loginUser }\r\n  )(Signin);\r\n*/"]},"metadata":{},"sourceType":"module"}