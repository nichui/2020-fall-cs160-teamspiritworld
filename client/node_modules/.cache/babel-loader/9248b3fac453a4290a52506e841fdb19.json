{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khatk\\\\Desktop\\\\Tutorials\\\\Web Development\\\\spiritworld\\\\client\\\\src\\\\components\\\\Pages\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbaruser from \"../Layout/NavbarUser\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { getPopularResources } from '../../actions/resourceAction';\nimport { RowGenerator, GenerateRowsWithBlocks } from '../../utils/helpers';\nimport '../../css/styles.css';\nimport ReactTable from 'react-table';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await getPopularResources().then(resources => {\n        this.setState({\n          resources: resources.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.state = {\n      resources: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  /*  \r\n    componentDidMount(){\r\n      this.props.dispatch(getPopularResources())\r\n  }\r\n  */\n\n  /*\r\n  loadmore = () => {\r\n      let resourceList = this.props.resources.collection;\r\n      //let count = resourceList.length;\r\n      this.props.dispatch(getPopularResources('desc',resourceList))\r\n  }\r\n  \r\n  \r\n  showResources = (resources) => {\r\n      if(resources){\r\n          const rowsArray = RowGenerator(resources, 2);\r\n          const generatedResources = GenerateRowsWithBlocks(rowsArray,'six')\r\n          return generatedResources;\r\n      }\r\n      return false;\r\n  }\r\n  */\n  render() {\n    //console.log(this.props.resources)\n    //const {resources} = this.props.resources;\n    const {\n      resources,\n      isLoading\n    } = this.state;\n    console.log('TCL: ResourcesList -> render -> resources', resources);\n    const columns = [{\n      Header: 'ID',\n      accessor: '_id',\n      filterable: true\n    }, {\n      Header: 'Title',\n      accessor: 'title',\n      filterable: true\n    }, {\n      Header: 'Rating',\n      accessor: 'rating',\n      filterable: true\n    }];\n    let showTable = true;\n\n    if (!resources.length) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Navbaruser, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"75vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, \"Wecome to the homepage!\", /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"150px\",\n        borderRadius: \"3px\",\n        letterSpacing: \"1.5px\",\n        marginTop: \"1rem\"\n      },\n      onClick: this.onLogoutClick,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, showTable && /*#__PURE__*/React.createElement(ReactTable, {\n      data: resources,\n      columns: columns,\n      loading: isLoading,\n      defaultPageSize: 10,\n      showPageSizeOptions: true,\n      minRows: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nHome.propTypes = {\n  //getResources: PropTypes.func.isRequired,\n  //resource: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  // resources: state.resources, //same as the one in rootReducer\n  auth: state.auth,\n  resources: state.resources\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getPopularResources\n})(Home);","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/components/Pages/Home.js"],"names":["React","Component","PropTypes","connect","logoutUser","Navbaruser","BrowserRouter","getPopularResources","RowGenerator","GenerateRowsWithBlocks","ReactTable","styled","Wrapper","div","Home","constructor","props","componentDidMount","setState","isLoading","then","resources","data","onLogoutClick","e","preventDefault","state","columns","render","console","log","Header","accessor","filterable","showTable","length","height","width","borderRadius","letterSpacing","marginTop","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,mBAAR,QAAkC,8BAAlC;AACA,SAAQC,YAAR,EAAsBC,sBAAtB,QAAmD,qBAAnD;AACA,OAAQ,sBAAR;AAEA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;;CAA3B;;AAIA,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAC3Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASrBC,iBATqB,GASD,YAAY;AAC5B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AAEA,YAAMZ,mBAAmB,GAAGa,IAAtB,CAA2BC,SAAS,IAAI;AAC1C,aAAKH,QAAL,CAAc;AACVG,UAAAA,SAAS,EAAEA,SAAS,CAACC,IAAV,CAAeA,IADhB;AAEVH,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OALK,CAAN;AAMH,KAlBoB;;AAAA,SA0CnBI,aA1CmB,GA0CHC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKT,KAAL,CAAWZ,UAAX;AACD,KA7CkB;;AAEjB,SAAKsB,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAE,EADF;AAETM,MAAAA,OAAO,EAAE,EAFA;AAGTR,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKH;;AAuCD;;;;;;AAKA;;;;;;;;;;;;;;;;;AAkBES,EAAAA,MAAM,GAAG;AACN;AACD;AACA,UAAM;AAAEP,MAAAA,SAAF;AAAaF,MAAAA;AAAb,QAA2B,KAAKO,KAAtC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDT,SAAzD;AAEA,UAAMM,OAAO,GAAG,CACd;AACII,MAAAA,MAAM,EAAE,IADZ;AAEIC,MAAAA,QAAQ,EAAE,KAFd;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KADc,EAMd;AACIF,MAAAA,MAAM,EAAE,OADZ;AAEIC,MAAAA,QAAQ,EAAE,OAFd;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KANc,EAWd;AACIF,MAAAA,MAAM,EAAE,QADZ;AAEIC,MAAAA,QAAQ,EAAE,QAFd;AAGIC,MAAAA,UAAU,EAAE;AAHhB,KAXc,CAAhB;AAmBF,QAAIC,SAAS,GAAG,IAAhB;;AACA,QAAI,CAACb,SAAS,CAACc,MAAf,EAAuB;AACnBD,MAAAA,SAAS,GAAG,KAAZ;AACH;;AACC,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAIM;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,YAAY,EAAE,KAFT;AAGLC,QAAAA,aAAa,EAAE,OAHV;AAILC,QAAAA,SAAS,EAAE;AAJN,OADT;AAOE,MAAA,OAAO,EAAE,KAAKjB,aAPhB;AAQE,MAAA,IAAI,EAAC,GARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJN,CAJF,eA4BQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,SAAS,iBACN,oBAAC,UAAD;AACI,MAAA,IAAI,EAAEb,SADV;AAEI,MAAA,OAAO,EAAEM,OAFb;AAGI,MAAA,OAAO,EAAER,SAHb;AAII,MAAA,eAAe,EAAE,EAJrB;AAKI,MAAA,mBAAmB,EAAE,IALzB;AAMI,MAAA,OAAO,EAAE,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CA5BR,CAFA;AA8CD;;AAjJ0B;;AAoJ7BL,IAAI,CAAC2B,SAAL,GAAiB;AACf;AACA;AACArC,EAAAA,UAAU,EAAEF,SAAS,CAACwC,IAAV,CAAeC,UAHZ;AAIfC,EAAAA,IAAI,EAAE1C,SAAS,CAAC2C,MAAV,CAAiBF;AAJR,CAAjB;;AAOA,MAAMG,eAAe,GAAGpB,KAAK,KAAK;AACjC;AACCkB,EAAAA,IAAI,EAAElB,KAAK,CAACkB,IAFoB;AAGhCvB,EAAAA,SAAS,EAAEK,KAAK,CAACL;AAHe,CAAL,CAA7B;;AAMA,eAAelB,OAAO,CACpB2C,eADoB,EAEpB;AAAE1C,EAAAA,UAAF;AAAcG,EAAAA;AAAd,CAFoB,CAAP,CAGbO,IAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Navbaruser from \"../Layout/NavbarUser\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {getPopularResources} from '../../actions/resourceAction';\r\nimport {RowGenerator, GenerateRowsWithBlocks} from '../../utils/helpers'\r\nimport  '../../css/styles.css'\r\n\r\nimport ReactTable from 'react-table';\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n    padding: 0 40px 40px 40px;\r\n`\r\n  \r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        resources: [],\r\n        columns: [],\r\n        isLoading: false,\r\n    }\r\n}\r\n\r\ncomponentDidMount = async () => {\r\n    this.setState({ isLoading: true })\r\n\r\n    await getPopularResources().then(resources => {\r\n        this.setState({\r\n            resources: resources.data.data,\r\n            isLoading: false,\r\n        })\r\n    })\r\n}\r\n\r\n  /*\r\n  static propTypes={\r\n    logout: PropTypes.func.isRequired\r\n  }\r\n  */\r\n /*\r\n  componentDidMount(){\r\n    this.props.dispatch(getResources(6,0,'desc'));\r\n  }\r\n  */\r\n  /*\r\n  showResources = (resource) =>{\r\n\r\n    if(resource.collection){\r\n        const rowArray = RowGenerator(resource.collection, 2);\r\n        //console.log(rowArray)\r\n        const generatedResources = GenerateRowsWithBlocks(rowArray,'six')\r\n        return generatedResources;\r\n      }\r\n    return false;\r\n  }\r\n  */\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n/*  \r\n  componentDidMount(){\r\n    this.props.dispatch(getPopularResources())\r\n}\r\n*/\r\n/*\r\nloadmore = () => {\r\n    let resourceList = this.props.resources.collection;\r\n    //let count = resourceList.length;\r\n    this.props.dispatch(getPopularResources('desc',resourceList))\r\n}\r\n\r\n\r\nshowResources = (resources) => {\r\n    if(resources){\r\n        const rowsArray = RowGenerator(resources, 2);\r\n        const generatedResources = GenerateRowsWithBlocks(rowsArray,'six')\r\n        return generatedResources;\r\n    }\r\n    return false;\r\n}\r\n*/\r\n\r\n  render() {\r\n     //console.log(this.props.resources)\r\n    //const {resources} = this.props.resources;\r\n    const { resources, isLoading } = this.state\r\n    console.log('TCL: ResourcesList -> render -> resources', resources)\r\n\r\n    const columns = [\r\n      {\r\n          Header: 'ID',\r\n          accessor: '_id',\r\n          filterable: true,\r\n      },\r\n      {\r\n          Header: 'Title',\r\n          accessor: 'title',\r\n          filterable: true,\r\n      },\r\n      {\r\n          Header: 'Rating',\r\n          accessor: 'rating',\r\n          filterable: true,\r\n      },\r\n      \r\n  ]\r\n\r\n  let showTable = true\r\n  if (!resources.length) {\r\n      showTable = false\r\n  }\r\n    return (\r\n     \r\n    <div>\r\n      \r\n      \r\n      <Navbaruser />\r\n      <div style={{ height: \"75vh\" }} >\r\n        Wecome to the homepage!\r\n       \r\n\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              href=\"#\"\r\n              \r\n            >\r\n              Logout\r\n            </button>\r\n              \r\n             {/*this.showResources(this.props.resources)}*/}\r\n     \r\n       \r\n         \r\n            </div>\r\n\r\n            <Wrapper>\r\n                {showTable && (\r\n                    <ReactTable\r\n                        data={resources}\r\n                        columns={columns}\r\n                        loading={isLoading}\r\n                        defaultPageSize={10}\r\n                        showPageSizeOptions={true}\r\n                        minRows={0}\r\n                    />\r\n                )}\r\n            </Wrapper>\r\n          </div>\r\n        \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  //getResources: PropTypes.func.isRequired,\r\n  //resource: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n\r\n};\r\nconst mapStateToProps = state => ({\r\n // resources: state.resources, //same as the one in rootReducer\r\n  auth: state.auth,\r\n  resources: state.resources\r\n  \r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getPopularResources }\r\n)(Home);\r\n"]},"metadata":{},"sourceType":"module"}