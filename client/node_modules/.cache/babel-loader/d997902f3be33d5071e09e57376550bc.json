{"ast":null,"code":"import { SET_CURRENT_USER, USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n/*\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  user: {},\r\n \r\n \r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        \r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n*/\n\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    case USER_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/reducers/authReducer.js"],"names":["SET_CURRENT_USER","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","isEmpty","require","initialState","isAuthenticated","user","loading","state","action","type","payload"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,cAPJ,EAQIC,gBARJ,EASIC,aATJ,QAWS,kBAXT;;AAYE,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDD,MAAMC,YAAY,GAAG;AACpBC,EAAAA,eAAe,EAAE,KADG;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAArB;AAMD,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,gBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELH,QAAAA,eAAe,EAAE,CAACH,OAAO,CAACO,MAAM,CAACE,OAAR,CAFpB;AAGLL,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAHR,OAAP;;AAKF,SAAKjB,YAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AACE,aAAOC,KAAP;AAbJ;AAeD","sourcesContent":["import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    \r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  /*\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n    user: {},\r\n   \r\n   \r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        };\r\n      case USER_LOADED:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          isLoading: false,\r\n          user: action.payload\r\n        };\r\n      case LOGIN_SUCCESS:\r\n      case REGISTER_SUCCESS:\r\n        localStorage.setItem('token', action.payload.token);\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          isAuthenticated: true,\r\n          isLoading: false,\r\n          \r\n        };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGIN_SUCCESS:\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          user: null,\r\n          isAuthenticated: false,\r\n          isLoading: false\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  */\r\n \r\n const initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}