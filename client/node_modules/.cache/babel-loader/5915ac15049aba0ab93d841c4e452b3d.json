{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Icon from './Icon';\nvar customCache = new Set();\nexport default function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var scriptUrl = options.scriptUrl,\n      _options$extraCommonP = options.extraCommonProps,\n      extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl)) {\n    var script = document.createElement('script');\n    script.setAttribute('src', scriptUrl);\n    script.setAttribute('data-namespace', scriptUrl);\n    customCache.add(scriptUrl);\n    document.body.appendChild(script);\n  }\n\n  var Iconfont = function Iconfont(props) {\n    var type = props.type,\n        children = props.children,\n        restProps = _objectWithoutProperties(props, [\"type\", \"children\"]); // children > type\n\n\n    var content = null;\n\n    if (props.type) {\n      content = React.createElement(\"use\", {\n        xlinkHref: \"#\".concat(type)\n      });\n    }\n\n    if (children) {\n      content = children;\n    }\n\n    return React.createElement(Icon, Object.assign({}, extraCommonProps, restProps), content);\n  };\n\n  Iconfont.displayName = 'Iconfont';\n  return Iconfont;\n}","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/node_modules/@ant-design/icons/es/components/IconFont.js"],"names":["_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","React","Icon","customCache","Set","create","options","arguments","undefined","scriptUrl","_options$extraCommonP","extraCommonProps","document","window","createElement","has","script","setAttribute","add","body","appendChild","Iconfont","props","type","children","restProps","content","xlinkHref","concat","assign","displayName"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Icon from './Icon';\nvar customCache = new Set();\nexport default function create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var scriptUrl = options.scriptUrl,\n      _options$extraCommonP = options.extraCommonProps,\n      extraCommonProps = _options$extraCommonP === void 0 ? {} : _options$extraCommonP;\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function' && typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl)) {\n    var script = document.createElement('script');\n    script.setAttribute('src', scriptUrl);\n    script.setAttribute('data-namespace', scriptUrl);\n    customCache.add(scriptUrl);\n    document.body.appendChild(script);\n  }\n\n  var Iconfont = function Iconfont(props) {\n    var type = props.type,\n        children = props.children,\n        restProps = _objectWithoutProperties(props, [\"type\", \"children\"]); // children > type\n\n\n    var content = null;\n\n    if (props.type) {\n      content = React.createElement(\"use\", {\n        xlinkHref: \"#\".concat(type)\n      });\n    }\n\n    if (children) {\n      content = children;\n    }\n\n    return React.createElement(Icon, Object.assign({}, extraCommonProps, restProps), content);\n  };\n\n  Iconfont.displayName = 'Iconfont';\n  return Iconfont;\n}"]},"metadata":{},"sourceType":"module"}