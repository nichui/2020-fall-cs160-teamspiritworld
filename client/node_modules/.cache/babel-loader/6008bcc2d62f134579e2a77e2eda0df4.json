{"ast":null,"code":"import React, { Component, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport Navbaruser from \"../Layout/NavbarUser\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { fetchAllPosts, getPopularResources } from '../../actions/resourceAction';\nimport { RowGenerator, GenerateRowsWithBlocks } from '../../utils/helpers';\nimport '../../css/styles.css';\nimport Resource from '../Layout/Resource';\nimport { Alert, Spinner } from 'reactstrap';\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    resources: state.resources,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPopularResources: () => dispatch(getPopularResources())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n/*\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resources: []\r\n    }\r\n  }\r\n  \r\n  */\n\n/*\r\nstatic propTypes={\r\n  logout: PropTypes.func.isRequired\r\n}\r\n*/\n\n/*\r\n componentDidMount(){\r\n   this.props.dispatch(getResources(6,0,'desc'));\r\n }\r\n */\n\n/*\r\nshowResources = (resource) =>{\r\n    if(resource.collection){\r\n      const rowArray = RowGenerator(resource.collection, 2);\r\n      //console.log(rowArray)\r\n      const generatedResources = GenerateRowsWithBlocks(rowArray,'six')\r\n      return generatedResources;\r\n    }\r\n  return false;\r\n}\r\n*/\n\n/*\r\n onLogoutClick = e => {\r\n   e.preventDefault();\r\n   this.props.logoutUser();\r\n };\r\n */\n\n/*\r\n  componentDidMount = () => {\r\n    this.props.getPopularResources();\r\n}\r\n*/\n\n/*\r\n  componentDidMount(){\r\n\r\n    this.setState({\r\n      resources: this.props.resources.resource\r\n    })\r\n}\r\n*/\n\n/*\r\nloadmore = () => {\r\n    let resourceList = this.props.resources.collection;\r\n    //let count = resourceList.length;\r\n    this.props.dispatch(getPopularResources('desc',resourceList))\r\n}\r\n\r\n\r\nshowResources = (resources) => {\r\n    if(resources){\r\n        const rowsArray = RowGenerator(resources, 2);\r\n        const generatedResources = GenerateRowsWithBlocks(rowsArray,'six')\r\n        return generatedResources;\r\n    }\r\n    return false;\r\n}\r\n*/\n\n/*\r\n  render() {\r\n     //console.log(this.props.resources)\r\n    //const {resources} = this.props.resources;\r\n    const {items} = this.props.resources;\r\n    console.log(this.props.resources)\r\n    return (\r\n     \r\n    <div>\r\n      \r\n      \r\n      <Navbaruser />\r\n      <div style={{ height: \"75vh\" }} >\r\n        Wecome to the homepage!\r\n       \r\n\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              href=\"#\"\r\n              \r\n            >\r\n              Logout\r\n            </button>\r\n              \r\n             {/*this.showResources(this.props.resources)}*/\n\n/*\r\n<div>\r\n<Resource \r\n     \r\n     title={this.props.resources.title}\r\n     content={this.props.resources.content}\r\n     category={this.props.resources.category}\r\n     rating={this.props.resources.rating}\r\n   />\r\n  </div>\r\n  \r\n   </div>\r\n   </div>\r\n\r\n);\r\n}\r\n}\r\n*/\n\n/*\r\nHome.propTypes = {\r\n  //getResources: PropTypes.func.isRequired,\r\n  //resource: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n\r\n};\r\nconst mapStateToProps = state => ({\r\n // resources: state.resources, //same as the one in rootReducer\r\n  auth: state.auth,\r\n  resources: state.resources,\r\n  loading: state. loading,\r\n  error: state.error\r\n});\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources())\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getPopularResources }\r\n)(Home);\r\n*/","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/components/Pages/Home.js"],"names":["React","Component","useEffect","PropTypes","connect","logoutUser","Navbaruser","BrowserRouter","fetchAllPosts","getPopularResources","RowGenerator","GenerateRowsWithBlocks","Resource","Alert","Spinner","mapStateToProps","state","loading","resources","error","mapDispatchToProps","dispatch","Home"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,aAAR,EAAuBC,mBAAvB,QAAiD,8BAAjD;AACA,SAAQC,YAAR,EAAsBC,sBAAtB,QAAmD,qBAAnD;AACA,OAAQ,sBAAR;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,KAAR,EAAeC,OAAf,QAA6B,YAA7B;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELC,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAFZ;AAGLC,IAAAA,KAAK,EAAEH,KAAK,CAACG;AAHR,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLZ,IAAAA,mBAAmB,EAAE,MAAMY,QAAQ,CAACZ,mBAAmB,EAApB;AAD9B,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACW,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CE,IAA7C,CAAf;AACA;;;;;;;;;;;AAUE;;;;;;AAKD;;;;;;AAKC;;;;;;;;;;;;AAYD;;;;;;;AAMD;;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BK;;;;;;;;;;;;;;;;;;;AAmBL","sourcesContent":["import React, { Component, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport Navbaruser from \"../Layout/NavbarUser\";\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {fetchAllPosts, getPopularResources} from '../../actions/resourceAction';\r\nimport {RowGenerator, GenerateRowsWithBlocks} from '../../utils/helpers'\r\nimport  '../../css/styles.css'\r\nimport Resource from '../Layout/Resource'\r\nimport {Alert, Spinner} from 'reactstrap';\r\n \r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.loading,\r\n    resources: state.resources,\r\n    error: state.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n/*\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      resources: []\r\n    }\r\n  }\r\n  \r\n  */\r\n  /*\r\n  static propTypes={\r\n    logout: PropTypes.func.isRequired\r\n  }\r\n  */\r\n /*\r\n  componentDidMount(){\r\n    this.props.dispatch(getResources(6,0,'desc'));\r\n  }\r\n  */\r\n  /*\r\n  showResources = (resource) =>{\r\n\r\n    if(resource.collection){\r\n        const rowArray = RowGenerator(resource.collection, 2);\r\n        //console.log(rowArray)\r\n        const generatedResources = GenerateRowsWithBlocks(rowArray,'six')\r\n        return generatedResources;\r\n      }\r\n    return false;\r\n  }\r\n  */\r\n /*\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  */\r\n/*\r\n  componentDidMount = () => {\r\n    this.props.getPopularResources();\r\n}\r\n*/\r\n/*\r\n  componentDidMount(){\r\n\r\n    this.setState({\r\n      resources: this.props.resources.resource\r\n    })\r\n}\r\n*/\r\n\r\n/*\r\nloadmore = () => {\r\n    let resourceList = this.props.resources.collection;\r\n    //let count = resourceList.length;\r\n    this.props.dispatch(getPopularResources('desc',resourceList))\r\n}\r\n\r\n\r\nshowResources = (resources) => {\r\n    if(resources){\r\n        const rowsArray = RowGenerator(resources, 2);\r\n        const generatedResources = GenerateRowsWithBlocks(rowsArray,'six')\r\n        return generatedResources;\r\n    }\r\n    return false;\r\n}\r\n*/\r\n/*\r\n  render() {\r\n     //console.log(this.props.resources)\r\n    //const {resources} = this.props.resources;\r\n    const {items} = this.props.resources;\r\n    console.log(this.props.resources)\r\n    return (\r\n     \r\n    <div>\r\n      \r\n      \r\n      <Navbaruser />\r\n      <div style={{ height: \"75vh\" }} >\r\n        Wecome to the homepage!\r\n       \r\n\r\n            <button\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              href=\"#\"\r\n              \r\n            >\r\n              Logout\r\n            </button>\r\n              \r\n             {/*this.showResources(this.props.resources)}*/\r\n     /*\r\n     <div>\r\n     <Resource \r\n          \r\n          title={this.props.resources.title}\r\n          content={this.props.resources.content}\r\n          category={this.props.resources.category}\r\n          rating={this.props.resources.rating}\r\n        />\r\n\r\n     </div>\r\n       \r\n        </div>\r\n        </div>\r\n     \r\n    );\r\n  }\r\n}\r\n*/\r\n/*\r\nHome.propTypes = {\r\n  //getResources: PropTypes.func.isRequired,\r\n  //resource: PropTypes.object.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n\r\n};\r\nconst mapStateToProps = state => ({\r\n // resources: state.resources, //same as the one in rootReducer\r\n  auth: state.auth,\r\n  resources: state.resources,\r\n  loading: state. loading,\r\n  error: state.error\r\n});\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getPopularResources: () => dispatch(getPopularResources())\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser, getPopularResources }\r\n)(Home);\r\n*/"]},"metadata":{},"sourceType":"module"}