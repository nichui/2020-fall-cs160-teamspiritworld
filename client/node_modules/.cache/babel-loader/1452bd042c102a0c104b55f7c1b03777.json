{"ast":null,"code":"import axios from 'axios';\nimport { GET_RESOURCES, GET_RESOURCE } from '../actions/types';\n/*\r\nexport function getPopularResources(\r\n    title, \r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      const body = JSON.stringify({\r\n        title, content,category,rating});\r\n    const request = axios.get(`/api/resources/popular?order=${order}`, body, config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n*/\n\nexport const getPopularResources = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios.get('/api/resources/popular').then(res => dispatch({\n    type: GET_RESOURCES,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport function getResource(resourceId) {\n  //  /api/resources/resource?id=5e13765a4084511885f252f1\n  const request = axios.get(`/api/resources/resource?id=${resourceId}`).then(response => {\n    return response.data;\n  }).catch(err => {\n    return false;\n  });\n  return {\n    type: GET_RESOURCE,\n    payload: request\n  };\n}","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/actions/resourceAction.js"],"names":["axios","GET_RESOURCES","GET_RESOURCE","getPopularResources","dispatch","setItemsLoading","get","then","res","type","payload","data","catch","err","returnErrors","response","status","getResource","resourceId","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,YAAtB,QAAyC,kBAAzC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAO,MAAMC,mBAAmB,GAAG,MAAMC,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAL,EAAAA,KAAK,CACFM,GADH,CACO,wBADP,EAEGC,IAFH,CAEQC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAER,aADC;AAEPS,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IACRT,QAAQ,CAACU,YAAY,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAd,EAAoBE,GAAG,CAACE,QAAJ,CAAaC,MAAjC,CAAb,CATZ;AAWD,CAbI;AAcP,OAAO,SAASC,WAAT,CAAqBC,UAArB,EAAgC;AACnC;AAEA,QAAMC,OAAO,GAAGnB,KAAK,CAACM,GAAN,CAAW,8BAA6BY,UAAW,EAAnD,EACFX,IADE,CACIQ,QAAQ,IAAI;AACf,WAAOA,QAAQ,CAACJ,IAAhB;AACH,GAHE,EAGAC,KAHA,CAGOC,GAAD,IAAO;AACZ,WAAO,KAAP;AACH,GALE,CAAhB;AAOC,SAAO;AACHJ,IAAAA,IAAI,EAAEP,YADH;AAEHQ,IAAAA,OAAO,EAAES;AAFN,GAAP;AAKH","sourcesContent":["import axios from 'axios';\r\nimport {GET_RESOURCES,GET_RESOURCE} from '../actions/types';\r\n/*\r\nexport function getPopularResources(\r\n    title, \r\n    content,\r\n    category,\r\n    rating,\r\n    order = 'asc',\r\n    list\r\n){\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      const body = JSON.stringify({\r\n        title, content,category,rating});\r\n    const request = axios.get(`/api/resources/popular?order=${order}`, body, config)\r\n                    .then (response =>{\r\n                        return list ? [...list,...response.data] : response.data;\r\n                    });\r\n                   \r\n                    return {\r\n\r\n                        type: GET_RESOURCES,\r\n                        payload: request\r\n                    }\r\n}\r\n*/\r\nexport const getPopularResources = () => dispatch => {\r\n    dispatch(setItemsLoading());\r\n    axios\r\n      .get('/api/resources/popular')\r\n      .then(res =>\r\n        dispatch({\r\n          type: GET_RESOURCES,\r\n          payload: res.data\r\n        })\r\n      )\r\n      .catch(err =>\r\n        dispatch(returnErrors(err.response.data, err.response.status))\r\n      );\r\n  };\r\nexport function getResource(resourceId){\r\n    //  /api/resources/resource?id=5e13765a4084511885f252f1\r\n    \r\n    const request = axios.get(`/api/resources/resource?id=${resourceId}`)\r\n                 .then( response => {\r\n                     return response.data\r\n                 }).catch((err)=>{\r\n                     return false\r\n                 })\r\n \r\n     return {\r\n         type: GET_RESOURCE,\r\n         payload: request\r\n     }\r\n \r\n }\r\n \r\n\r\n"]},"metadata":{},"sourceType":"module"}