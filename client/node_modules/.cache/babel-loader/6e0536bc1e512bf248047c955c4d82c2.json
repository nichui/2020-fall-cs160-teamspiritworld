{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khatk\\\\Desktop\\\\Tutorials\\\\Web Development\\\\spiritworld\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Landingpage from './components/Pages/LandingPage';\nimport Loginpage from './components/Pages/Signin';\nimport Registerpage from './components/Pages/Register';\n{\n  /*\n  var express = require(\"express\"), \n     mongoose = require(\"mongoose\"), \n     passport = require(\"passport\"), \n     bodyParser = require(\"body-parser\"), \n     LocalStrategy = require(\"passport-local\"), \n     passportLocalMongoose =  \n         require(\"passport-local-mongoose\"), \n  User = require(\"./models/user\"); \n  \n  mongoose.set('useNewUrlParser', true); \n  mongoose.set('useFindAndModify', false); \n  mongoose.set('useCreateIndex', true); \n  mongoose.set('useUnifiedTopology', true); \n  mongoose.connect(\"mongodb://localhost/LandingPage\");\n  var app = express(); \n  app.set(\"view engine\", \"ejs\"); \n  app.use(bodyParser.urlencoded({ extended: true })); \n   \n  app.use(require(\"express-session\")({ \n     secret: \"Rusty is a dog\", \n     resave: false, \n     saveUninitialized: false\n  })); \n  app.use(passport.initialize()); \n  app.use(passport.session()); \n   \n  passport.use(new LocalStrategy(User.authenticate())); \n  passport.serializeUser(User.serializeUser()); \n  passport.deserializeUser(User.deserializeUser()); \n  app.get(\"/\", function (req, res) { \n     res.render(\"Landingpage\"); \n  }); \n   \n   \n  // Showing register form \n  app.get(\"/Register\", function (req, res) { \n     res.render(\"Registerpage\"); \n  }); \n   \n  // Handling user signup \n  app.post(\"/Register\", function (req, res) { \n     var username = req.body.username \n     var password = req.body.password \n     User.register(new User({ username: username }), \n             password, function (err, user) { \n         if (err) { \n             console.log(err); \n             return res.render(\"Registerpage\"); \n         } \n   \n       \n     }); \n  }); \n   \n  //Showing login form \n  app.get(\"/Signin\", function (req, res) { \n     res.render(\"Loginpage\"); \n  }); \n   \n  //Handling user login \n  app.post(\"/Signin\", passport.authenticate(\"local\", { \n     failureRedirect: \"/Signin\"\n  }), function (req, res) { \n  }); \n   \n   \n  function isLoggedIn(req, res, next) { \n     if (req.isAuthenticated()) return next(); \n     res.redirect(\"/Signin\"); \n  } \n   \n  var port = process.env.PORT || 3000; \n  app.listen(port, function () { \n     console.log(\"Server Has Started!\"); \n  }); \n  \n  */\n}\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Landingpage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Signin\",\n      component: Loginpage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/Register\",\n      component: Registerpage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Landingpage","Loginpage","Registerpage","App","render"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SACCC,aAAa,IAAIC,MADlB,EAECC,KAFD,EAGCC,IAHD,QAIO,kBAJP;AAMA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFE;;AAEH,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC3BS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEJ,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGK,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHL,CADF,CADF;AAYD;;AAd0B;;AAiB5B,eAAeC,GAAf","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tLink\n} from \"react-router-dom\";\n\nimport Landingpage from './components/Pages/LandingPage';\nimport Loginpage from './components/Pages/Signin'\nimport Registerpage from './components/Pages/Register'\n{/*\nvar express = require(\"express\"), \n    mongoose = require(\"mongoose\"), \n    passport = require(\"passport\"), \n    bodyParser = require(\"body-parser\"), \n    LocalStrategy = require(\"passport-local\"), \n    passportLocalMongoose =  \n        require(\"passport-local-mongoose\"), \n\tUser = require(\"./models/user\"); \n\t\nmongoose.set('useNewUrlParser', true); \nmongoose.set('useFindAndModify', false); \nmongoose.set('useCreateIndex', true); \nmongoose.set('useUnifiedTopology', true); \nmongoose.connect(\"mongodb://localhost/LandingPage\");\n\nvar app = express(); \napp.set(\"view engine\", \"ejs\"); \napp.use(bodyParser.urlencoded({ extended: true })); \n  \napp.use(require(\"express-session\")({ \n    secret: \"Rusty is a dog\", \n    resave: false, \n    saveUninitialized: false\n})); \n\napp.use(passport.initialize()); \napp.use(passport.session()); \n  \npassport.use(new LocalStrategy(User.authenticate())); \npassport.serializeUser(User.serializeUser()); \npassport.deserializeUser(User.deserializeUser()); \n\napp.get(\"/\", function (req, res) { \n    res.render(\"Landingpage\"); \n}); \n  \n  \n// Showing register form \napp.get(\"/Register\", function (req, res) { \n    res.render(\"Registerpage\"); \n}); \n  \n// Handling user signup \napp.post(\"/Register\", function (req, res) { \n    var username = req.body.username \n    var password = req.body.password \n    User.register(new User({ username: username }), \n            password, function (err, user) { \n        if (err) { \n            console.log(err); \n            return res.render(\"Registerpage\"); \n        } \n  \n      \n    }); \n}); \n  \n//Showing login form \napp.get(\"/Signin\", function (req, res) { \n    res.render(\"Loginpage\"); \n}); \n  \n//Handling user login \napp.post(\"/Signin\", passport.authenticate(\"local\", { \n    failureRedirect: \"/Signin\"\n}), function (req, res) { \n}); \n  \n  \nfunction isLoggedIn(req, res, next) { \n    if (req.isAuthenticated()) return next(); \n    res.redirect(\"/Signin\"); \n} \n  \nvar port = process.env.PORT || 3000; \napp.listen(port, function () { \n    console.log(\"Server Has Started!\"); \n}); \n\n\n*/}\n\nclass App extends Component {\n\trender() {\n \t\treturn (\n  \t\t\t<Router>\n    \t\t\t<div className=\"App\">\n    \t\t\t\t<Route path=\"/\" exact component={Landingpage} />\n    \t\t\t\t<Route path=\"/Signin\" component={Loginpage} />\n            <Route path=\"/Register\" component={Registerpage} />\n    \t\t\t\t\n    \t\t\t\t\n    \t\t\t</div>\n    \t\t</Router>\n    \n  \t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}