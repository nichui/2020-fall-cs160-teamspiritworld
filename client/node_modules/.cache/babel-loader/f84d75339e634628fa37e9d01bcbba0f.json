{"ast":null,"code":"import { SET_CURRENT_USER, USER_LOADING, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  //token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n}\n/*\r\nconst initialState = {\r\n isAuthenticated: false,\r\n user: {},\r\n loading: false\r\n};\r\n\nexport default function(state = initialState, action) {\r\n switch (action.type) {\r\n   case SET_CURRENT_USER:\r\n     return {\r\n       ...state,\r\n       isAuthenticated: !isEmpty(action.payload),\r\n       user: action.payload\r\n     };\r\n   case USER_LOADING:\r\n     return {\r\n       ...state,\r\n       loading: true\r\n     };\r\n   default:\r\n     return state;\r\n }\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/reducers/authReducer.js"],"names":["SET_CURRENT_USER","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","isEmpty","require","initialState","isAuthenticated","isLoading","user","state","action","type","payload","localStorage","setItem","token"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,YAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,cAPJ,EAQIC,gBARJ,EASIC,aATJ,QAWS,kBAXT;;AAYE,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,gBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELH,QAAAA,eAAe,EAAE,CAACH,OAAO,CAACO,MAAM,CAACE,OAAR,CAFpB;AAGLJ,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAHR,OAAP;;AAKF,SAAKjB,YAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAJR,OAAP;;AAMF,SAAKd,aAAL;AACA,SAAKG,gBAAL;AACEY,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACE,OAAP,CAAeG,KAA7C;AACA,aAAO,EACL,GAAGN,KADE;AAEL,WAAGC,MAAM,CAACE,OAFL;AAGLN,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAOF,SAAKV,UAAL;AACA,SAAKE,UAAL;AACA,SAAKC,cAAL;AACA,SAAKE,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELM,QAAAA,KAAK,EAAE,IAFF;AAGLP,QAAAA,IAAI,EAAE,IAHD;AAILF,QAAAA,eAAe,EAAE,KAJZ;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF;AACE,aAAOE,KAAP;AAzCJ;AA2CD;AAEF","sourcesContent":["import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    \r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  \r\n  const initialState = {\r\n    //token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    isLoading: false,\r\n    user: null,\r\n   \r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          isLoading: true\r\n        };\r\n      case USER_LOADED:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          isLoading: false,\r\n          user: action.payload\r\n        };\r\n      case LOGIN_SUCCESS:\r\n      case REGISTER_SUCCESS:\r\n        localStorage.setItem('token', action.payload.token);\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          isAuthenticated: true,\r\n          isLoading: false,\r\n          \r\n        };\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT_SUCCESS:\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          user: null,\r\n          isAuthenticated: false,\r\n          isLoading: false\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  \r\n /*\r\n const initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}