{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khatk\\\\Desktop\\\\Tutorials\\\\Web Development\\\\spiritworld\\\\client\\\\src\\\\components\\\\Pages\\\\Signin.js\";\nimport React, { Component } from 'react';\nimport '../../css/styles.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\n/*\r\nconst LoginSchema = Yup.object().shape({\r\n\r\n\tpassword: Yup.string().min(6,'Too short').required('Required !!'),\r\n\temail: Yup.string().email('Invalid email :(').required('Required !!'),\r\n})\r\n*/\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      msg: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProp.error) {\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/home\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"log\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"text-center border border-light p-5\",\n      action: \"#!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"h4 mb-4 FormTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      id: \"defaultLoginFormEmail\",\n      class: \"form-control mb-4\",\n      placeholder: \"E-mail\",\n      onChange: this.onChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"defaultLoginFormPassword\",\n      class: \"form-control mb-4\",\n      placeholder: \"Password\",\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Forgot password?\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }\n    }, \"Not a member? Please register below.\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: `${this.props.match.url}/Register`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 2\n      }\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withRouter(Login));","map":{"version":3,"sources":["C:/Users/khatk/Desktop/Tutorials/Web Development/spiritworld/client/src/components/Pages/Signin.js"],"names":["React","Component","Link","withRouter","PropTypes","Formik","Yup","connect","loginUser","Login","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","props","errors","msg","componentDidUpdate","prevProps","error","isAuthenticated","prevProp","componentDidMount","auth","history","push","componentWillReceiveProps","nextProps","render","pathname","match","url","propTypes","bool","object","isRequired","login","func","clearErrors","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../css/styles.css';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n/*\r\nconst LoginSchema = Yup.object().shape({\r\n\r\n\tpassword: Yup.string().min(6,'Too short').required('Required !!'),\r\n\temail: Yup.string().email('Invalid email :(').required('Required !!'),\r\n})\r\n*/\r\nclass Login extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\terrors: {},\r\n\t\t\tmsg: null\r\n\t\t  };\r\n\t}\r\n\tstatic propTypes = {\r\n\t\tisAuthenticated: PropTypes.bool,\r\n\t\terror: PropTypes.object.isRequired,\r\n\t\tlogin: PropTypes.func.isRequired,\r\n\t\tclearErrors: PropTypes.func.isRequired\r\n\t}\r\n\tcomponentDidUpdate(prevProps){\r\n\t\tconst {error, isAuthenticated} = this.props;\r\n\t\tif(error !== prevProp.error){\r\n\t\t\tif(error.id === 'LOGIN_FAIL'){\r\n\t\t\t\tthis.setState({msg: error.msg.msg});\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({msg: null});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// If logged in and user navigates to Login page, should redirect them to dashboard\r\n\t\tif (this.props.auth.isAuthenticated) {\r\n\t\t  this.props.history.push(\"/home\");\r\n\t\t}\r\n\t  }\r\n\t\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.auth.isAuthenticated) {\r\n\t\t  this.props.history.push(\"/home\"); // push user to dashboard when they login\r\n\t\t}\r\n\t\tif (nextProps.errors) {\r\n\t\t\tthis.setState({\r\n\t\t\t  errors: nextProps.errors\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\t\tonChange = e => {\r\n\t\t\tthis.setState({ [e.target.id]: e.target.value });\r\n\t\t  };\r\n\t\t\r\n\t\t  onSubmit = e => {\r\n\t\t\te.preventDefault();\r\n\t\t\r\n\t\t\tconst userData = {\r\n\t\t\t  email: this.state.email,\r\n\t\t\t  password: this.state.password\r\n\t\t\t};\r\n\t\t\r\n\t\t\tthis.props.loginUser(userData);\r\n\t\t  };\r\n\trender(){\r\n\t\tconst { errors } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"log\">\r\n\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<form onSubmit={this.onSubmit} className=\"text-center border border-light p-5\" action=\"#!\">\r\n\r\n    \t\t\t<p className=\"h4 mb-4 FormTitle\">Sign in</p>\r\n\r\n   \t\t \t<input name=\"email\" type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\" placeholder=\"E-mail\"  onChange={this.onChange}  value={this.state.email} error={errors.email} id=\"email\" />\r\n\t\t\t\r\n \r\n    \t\t<input type=\"password\" name=\"password\"  id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"Password\"  onChange={this.onChange}  value={this.state.password} error={errors.password} id=\"password\" />\r\n\t\t\t\r\n    \r\n       \r\n            <a href=\"\">Forgot password?</a>\r\n        \r\n\r\n  \r\n    \t<button class=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n\r\n    \r\n    \t<p>Not a member? Please register below.\r\n       \r\n    \t</p>\r\n\r\n    \t<button class=\"btn btn-info btn-block my-4\" type=\"submit\">Register</button>\r\n   \r\n\r\n\t\t</form>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\r\n\t<Link to={{\r\n\t\t\t\tpathname: `${this.props.match.url}/Register`\r\n\t\t\t}}></Link>\r\n</div>\r\n\r\n\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nLogin.propTypes = {\r\n\tloginUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired\r\n  };\r\n  const mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors\r\n  });\r\n  export default connect(\r\n\tmapStateToProps,\r\n\t{ loginUser }\r\n  )(withRouter(Login));\r\n\r\n  "]},"metadata":{},"sourceType":"module"}